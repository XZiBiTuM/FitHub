# Generated by Django 5.0.6 on 2024-09-05 12:25

import FitSite.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('products', models.BigIntegerField(blank=True, null=True, verbose_name='Продукты')),
                ('total_price', models.BigIntegerField(verbose_name='Общая цена')),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
            },
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('email', models.CharField(max_length=255, verbose_name='Электронная почта')),
                ('phone_number', models.CharField(max_length=255, verbose_name='Номер телефона')),
                ('city', models.CharField(max_length=255, verbose_name='Город')),
                ('street', models.CharField(max_length=255, verbose_name='Улица')),
                ('house', models.CharField(max_length=255, verbose_name='Дом')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Форма',
                'verbose_name_plural': 'Формы',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('brand', models.CharField(blank=True, max_length=255, null=True, verbose_name='Бренд')),
                ('quantity', models.IntegerField(verbose_name='Количество (шт.)')),
                ('short_description', models.CharField(max_length=255, verbose_name='Короткое описание')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
                ('weight_o', models.PositiveIntegerField(verbose_name='Вес (г.)')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=255, verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='ProductDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Полное описание')),
                ('compound', models.TextField(verbose_name='Состав')),
                ('expiration_date', models.SmallIntegerField(verbose_name='Срок годности (мес.)')),
                ('number_of_servings', models.IntegerField(blank=True, null=True, verbose_name='Количество порций')),
                ('serving_weight', models.IntegerField(blank=True, null=True, verbose_name='Вес порции (г.)')),
            ],
            options={
                'verbose_name': 'Деталь продукта',
                'verbose_name_plural': 'Детали продуктов',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('image', models.ImageField(max_length=255, upload_to='', validators=[FitSite.validators.validate_image_size], verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Изображение продукта',
                'verbose_name_plural': 'Изображения продуктов',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Общая цена')),
                ('payment_status', models.CharField(max_length=255, verbose_name='Статус оплаты')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FitSite.form', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_title', models.CharField(max_length=255, verbose_name='Название продукта')),
                ('client_id', models.BigIntegerField(verbose_name='ID клиента')),
                ('total_price', models.BigIntegerField(verbose_name='Общая цена')),
                ('status', models.BigIntegerField(verbose_name='Статус')),
                ('date', models.BigIntegerField(verbose_name='Дата')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FitSite.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Оплата',
                'verbose_name_plural': 'Оплаты',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='FitSite.order', verbose_name='Заказ')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FitSite.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Позиция заказа',
                'verbose_name_plural': 'Позиции заказа',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FitSite.productcategory', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_detail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='FitSite.productdetail', verbose_name='Деталь продукта'),
        ),
        migrations.AddField(
            model_name='product',
            name='images',
            field=models.ManyToManyField(to='FitSite.productimage', verbose_name='Изображения'),
        ),
        migrations.CreateModel(
            name='ProductQuantity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.SmallIntegerField(verbose_name='Количество')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FitSite.product', verbose_name='Вес продукта')),
            ],
            options={
                'verbose_name': 'Количество продукта',
                'verbose_name_plural': 'Количество продуктов',
            },
        ),
    ]
